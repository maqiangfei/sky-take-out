<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sky.mapper.OrderMapper">

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        insert into orders (number, status, user_id, address_book_id, order_time, pay_method,
                            pay_status, amount, remark, phone, address, consignee, estimated_delivery_time,
                            delivery_status, pack_amount, tableware_number, tableware_status) VALUES
        (#{number}, #{status}, #{userId}, #{addressBookId}, #{orderTime}, #{payMethod},
         #{payStatus}, #{amount}, #{remark}, #{phone}, #{address}, #{consignee}, #{estimatedDeliveryTime},
         #{deliveryStatus}, #{packAmount}, #{tablewareNumber}, #{tablewareStatus})
    </insert>
    <update id="update" parameterType="com.sky.entity.Orders">
        update orders
        <set>
            <if test="cancelReason != null and cancelReason != ''">
                cancel_reason = #{cancelReason},
            </if>
            <if test="rejectionReason != null and rejectionReason != ''">
                rejection_reason = #{rejectionReason},
            </if>
            <if test="cancelTime != null">
                cancel_time = #{cancelTime},
            </if>
            <if test="payStatus != null">
                pay_status = #{payStatus},
            </if>
            <if test="payMethod != null">
                pay_method = #{payMethod},
            </if>
            <if test="checkoutTime != null">
                checkout_time = #{checkoutTime},
            </if>
            <if test="status != null">
                `status` = #{status},
            </if>
            <if test="deliveryTime != null">
                delivery_time = #{deliveryTime}
            </if>
        </set>
        where id = #{id}
    </update>
    <select id="getIdByNumberAndUserId" resultType="long">
        select `id` from orders where number = #{outTradeNo} and user_id = #{userId}
    </select>
    <select id="pageQuery" resultMap="orderWithDetail">
        select o.id, o.number, status, user_id, address_book_id, order_time, checkout_time, pay_method,
               pay_status, o.amount, remark, phone, address, user_name, consignee, cancel_reason,
               rejection_reason, cancel_time, estimated_delivery_time, delivery_status, delivery_time,
               pack_amount, tableware_number, tableware_status,
               od.id od_id, name, image, order_id, dish_id, setmeal_id, dish_flavor, od.number od_number,
                od.amount od_amount
        from
                orders o
            left join
                order_detail od
            on
                o.id = od.order_id
        <where>
            <if test="number != null">
                and `number` like concat('%', #{number}, '%')
            </if>
            <if test="phone != null">
                and phone like concat('%', #{phone}, '%')
            </if>
            <if test="status != null">
                and `status` = #{status}
            </if>
            <if test="beginTime != null">
                and order_time &gt;= #{beginTime}
            </if>
            <if test="endTime != null">
                and order_time &lt;= #{endTime}
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
        </where>
    </select>
    <select id="getWithDetailById" resultMap="orderWithDetail">
        select o.id, o.number, status, user_id, address_book_id, order_time, checkout_time, pay_method,
               pay_status, o.amount, remark, phone, address, user_name, consignee, cancel_reason,
               rejection_reason, cancel_time, estimated_delivery_time, delivery_status, delivery_time,
               pack_amount, tableware_number, tableware_status,
               od.id od_id, name, image, order_id, dish_id, setmeal_id, dish_flavor, od.number od_number,
               od.amount od_amount
        from
            orders o
                left join
            order_detail od
            on
                o.id = od.order_id
        where o.id = #{id}
    </select>
    <select id="countStatus" resultType="java.lang.Integer">
        select count(id) from orders where status = #{status}
    </select>
    <select id="getById" resultType="com.sky.entity.Orders">
        select * from orders where id = #{id}
    </select>
    <select id="getByNumber" resultType="com.sky.entity.Orders">
        select * from orders where number = #{number}
    </select>
    <select id="getByStatusAndOrderTimeLT" resultType="com.sky.entity.Orders">
        select * from orders where status = #{status} and order_time &lt;= #{orderTime}
    </select>

    <resultMap id="orderWithDetail" type="com.sky.vo.OrderVO">
        <id column="id" property="id"/>
        <collection property="orderDetailList" ofType="orderDetail">
            <id column="od_id" property="id"/>
            <result column="od_number" property="number"/>
            <result column="od_amount" property="amount"/>
        </collection>
    </resultMap>
</mapper>